# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '../interfaces/Árbol del Catálogo de Patrones de Analísis.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import json
import os
from PyQt5 import QtCore, QtGui, QtWidgets
from interfacesPy.VistaPrevia import Ui_VistaPrevia as vp


class Ui_CatalogoPatron(object):
    def setupUi(self, CatalogoPatron,nombre):
        self.CatalogoPatron = CatalogoPatron
        CatalogoPatron.setObjectName("CatalogoPatron")
        CatalogoPatron.resize(624, 549)
        self.centralwidget = QtWidgets.QWidget(CatalogoPatron)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tw_catalogo = QtWidgets.QTreeWidget(self.centralwidget)
        self.tw_catalogo.setObjectName("tw_catalogo")
        self.horizontalLayout.addWidget(self.tw_catalogo)
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.le_nombrePatron = QtWidgets.QLineEdit(self.centralwidget)
        self.le_nombrePatron.setObjectName("le_nombrePatron")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.le_nombrePatron)
        self.lb_nombrePatron = QtWidgets.QLabel(self.centralwidget)
        self.lb_nombrePatron.setObjectName("lb_nombrePatron")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.lb_nombrePatron)
        self.lb_dominiosAsociados = QtWidgets.QLabel(self.centralwidget)
        self.lb_dominiosAsociados.setObjectName("lb_dominiosAsociados")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.lb_dominiosAsociados)
        self.lb_descripcion = QtWidgets.QLabel(self.centralwidget)
        self.lb_descripcion.setObjectName("lb_descripcion")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.lb_descripcion)
        self.lb_usosConocidos = QtWidgets.QLabel(self.centralwidget)
        self.lb_usosConocidos.setObjectName("lb_usosConocidos")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.lb_usosConocidos)
        self.lb_patronesRelacionados = QtWidgets.QLabel(self.centralwidget)
        self.lb_patronesRelacionados.setObjectName("lb_patronesRelacionados")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.lb_patronesRelacionados)
        self.lb_requisitosDominioAsociados = QtWidgets.QLabel(self.centralwidget)
        self.lb_requisitosDominioAsociados.setObjectName("lb_requisitosDominioAsociados")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.lb_requisitosDominioAsociados)
        self.lb_modeloAlcance = QtWidgets.QLabel(self.centralwidget)
        self.lb_modeloAlcance.setObjectName("lb_modeloAlcance")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.lb_modeloAlcance)
        self.lb_modeloEstructura = QtWidgets.QLabel(self.centralwidget)
        self.lb_modeloEstructura.setObjectName("lb_modeloEstructura")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.lb_modeloEstructura)
        self.lb_modeloComportamiento = QtWidgets.QLabel(self.centralwidget)
        self.lb_modeloComportamiento.setObjectName("lb_modeloComportamiento")
        self.formLayout.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.lb_modeloComportamiento)
        self.lb_template = QtWidgets.QLabel(self.centralwidget)
        self.lb_template.setObjectName("lb_template")
        self.formLayout.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.lb_template)
        self.te_dominiosAsociados = QtWidgets.QTextEdit(self.centralwidget)
        self.te_dominiosAsociados.setObjectName("te_dominiosAsociados")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.te_dominiosAsociados)
        self.te_descripcion = QtWidgets.QTextEdit(self.centralwidget)
        self.te_descripcion.setObjectName("te_descripcion")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.te_descripcion)
        self.te_usosConocidos = QtWidgets.QTextEdit(self.centralwidget)
        self.te_usosConocidos.setObjectName("te_usosConocidos")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.te_usosConocidos)
        self.te_patronesRelacionados = QtWidgets.QTextEdit(self.centralwidget)
        self.te_patronesRelacionados.setObjectName("te_patronesRelacionados")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.te_patronesRelacionados)
        self.te_requisitosDominioAsociados = QtWidgets.QTextEdit(self.centralwidget)
        self.te_requisitosDominioAsociados.setObjectName("te_requisitosDominioAsociados")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.te_requisitosDominioAsociados)
        self.pb_vistaAlcance = QtWidgets.QPushButton(self.centralwidget)
        self.pb_vistaAlcance.setObjectName("pb_vistaAlcance")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.pb_vistaAlcance)
        self.pb_vistaEstructura = QtWidgets.QPushButton(self.centralwidget)
        self.pb_vistaEstructura.setObjectName("pb_vistaEstructura")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.pb_vistaEstructura)
        self.pb_vistaComportamiento = QtWidgets.QPushButton(self.centralwidget)
        self.pb_vistaComportamiento.setObjectName("pb_vistaComportamiento")
        self.formLayout.setWidget(8, QtWidgets.QFormLayout.FieldRole, self.pb_vistaComportamiento)
        self.pb_vistaTemplate = QtWidgets.QPushButton(self.centralwidget)
        self.pb_vistaTemplate.setObjectName("pb_vistaTemplate")
        self.formLayout.setWidget(9, QtWidgets.QFormLayout.FieldRole, self.pb_vistaTemplate)
        self.horizontalLayout.addLayout(self.formLayout)
        CatalogoPatron.setCentralWidget(self.centralwidget)
        self.listarArbol(nombre)
        self.mostrarInformacion()
        
        
        
        self.tw_catalogo.itemClicked.connect(self.mostrarInformacion)

        self.retranslateUi(CatalogoPatron)
        QtCore.QMetaObject.connectSlotsByName(CatalogoPatron)
        
    def mostrarInformacion(self):
        # Limpiar los campos
        self.le_nombrePatron.clear()
        self.te_dominiosAsociados.clear()
        self.te_descripcion.clear()
        self.te_usosConocidos.clear()
        self.te_patronesRelacionados.clear()
        self.te_requisitosDominioAsociados.clear()
        
        # Leer la ruta de conf.json
        with open('conf.json') as file:
            data = json.load(file)
            ruta = data['repositorio']

        # Obtener la ruta del archivo seleccionado
        ruta_archivo = os.path.join(ruta,self.tw_catalogo.currentItem().text(0))
        
        
        # Leer el archivo JSON
        with open(f"{ruta_archivo}/data.json") as file:
            data = json.load(file)
            nombre = data['Nombre']
            dominios = data['Dominios']
            descripcion = data['Descripcion']
            usos = data['Usos']
            patrones = data['PatronesRelacionados']
            requisitos = data['RequisitosRelacionados']
            # Mostrar la información en los campos
            self.le_nombrePatron.setText(nombre)
            aux = ""
            for dominio in dominios:
                aux += f"{dominio} \n"
            self.te_dominiosAsociados.setText(aux)
            self.te_descripcion.setText(descripcion)

            usos_text = ''
            for uso in usos:
                usos_text += uso + '\n'
            self.te_usosConocidos.setText(usos_text)

            patrones_text = ''
            for patron in patrones:
                patrones_text += patron + '\n'
            self.te_patronesRelacionados.setText(patrones_text)
            
            requisitos_text = ''
            for requisito in requisitos:
                requisitos_text += requisito + '\n'
            self.te_requisitosDominioAsociados.setText(requisitos_text)
            
            self.pb_vistaAlcance.clicked.connect(lambda: self.mostrarVistaPrevia(ruta_archivo))
            self.pb_vistaEstructura.clicked.connect(lambda: self.mostrarVistaPrevia(ruta_archivo))
            self.pb_vistaComportamiento.clicked.connect(lambda: self.mostrarVistaPrevia(ruta_archivo))
            self.pb_vistaTemplate.clicked.connect(lambda: self.mostrarVistaPrevia(ruta_archivo))

    def mostrarVistaPrevia(self,ruta):
        self.nueva_ventana = QtWidgets.QMainWindow()
        self.ui_vista_previa = vp()
        self.ui_vista_previa.setupUi(self.nueva_ventana,ruta)
        self.CatalogoPatron.close()
        self.nueva_ventana.show()
        
        # Define a method to handle the close event and show the main window
        def on_close_event(event):
            self.CatalogoPatron.show()
            event.accept()

        # Connect the close event of the new window to the handler
        self.nueva_ventana.closeEvent = on_close_event

    def listarArbol(self,nombre=None):
        # Leer la ruta de conf.json
        with open('conf.json') as file:
            data = json.load(file)
            ruta = data['repositorio']
        
        # Limpiar el QTreeWidget
        self.tw_catalogo.clear()
        self.tw_catalogo.setColumnCount(1)
        self.tw_catalogo.setHeaderLabel('Nombre')

        # Llenar el QTreeWidget con la estructura de directorios y archivos
        self.add_directory(ruta, self.tw_catalogo.invisibleRootItem(),nombre)

    def add_directory(self, path, parent_item, nombre):
        """Añadir directorios y archivos al QTreeWidget, primero directorios y luego archivos."""
        directories = []
        files = []

        # Separar directorios y archivos
        for item in os.listdir(path):
            if item.startswith('.'):
                continue
            
            item_path = os.path.join(path, item)
            if os.path.isdir(item_path):
                directories.append(item)
            else:
                files.append(item)

        # Añadir directorios primero
        for directory in sorted(directories):
            item = QtWidgets.QTreeWidgetItem(parent_item, [directory])
            item.setIcon(0, QtGui.QIcon.fromTheme("emblem-documents"))
            
            if directory == nombre:
                self.tw_catalogo.setCurrentItem(item) 
            # else:    
            #     QtWidgets.QTreeWidgetItem(parent_item, [directory]).setIcon(0, QtGui.QIcon.fromTheme("emblem-documents"))
            #directory_widget.setChildIndicatorPolicy(QtWidgets.QTreeWidgetItem.ShowIndicator)
            #self.add_directory(directory_path, directory_widget)
        
        # # Añadir archivos después
        # for file in sorted(files):
        #     QtWidgets.QTreeWidgetItem(parent_item, [file])
            
            
    
    def retranslateUi(self, CatalogoPatron):
        _translate = QtCore.QCoreApplication.translate
        CatalogoPatron.setWindowTitle(_translate("CatalogoPatron", "Árbol del Catálogo de Patrones de Analísis"))
        self.tw_catalogo.headerItem().setText(0, _translate("CatalogoPatron", "Catalogo"))
        self.lb_nombrePatron.setText(_translate("CatalogoPatron", "Nombre del Patron"))
        self.lb_dominiosAsociados.setText(_translate("CatalogoPatron", "Dominios Asociados"))
        self.lb_descripcion.setText(_translate("CatalogoPatron", "Descripción"))
        self.lb_usosConocidos.setText(_translate("CatalogoPatron", "Usos conocidos "))
        self.lb_patronesRelacionados.setText(_translate("CatalogoPatron", "Patrones Relacionados"))
        self.lb_requisitosDominioAsociados.setText(_translate("CatalogoPatron", "Requisitos de Dominio Asociados"))
        self.lb_modeloAlcance.setText(_translate("CatalogoPatron", "Modelo de Alcance"))
        self.lb_modeloEstructura.setText(_translate("CatalogoPatron", "Modelo de Estructura"))
        self.lb_modeloComportamiento.setText(_translate("CatalogoPatron", "Modelo de Comportamiento"))
        self.lb_template.setText(_translate("CatalogoPatron", "Template"))
        self.pb_vistaAlcance.setText(_translate("CatalogoPatron", "Vista Previa"))
        self.pb_vistaEstructura.setText(_translate("CatalogoPatron", "Vista Previa"))
        self.pb_vistaComportamiento.setText(_translate("CatalogoPatron", "Vista Previa"))
        self.pb_vistaTemplate.setText(_translate("CatalogoPatron", "Vista Previa"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    CatalogoPatron = QtWidgets.QMainWindow()
    ui = Ui_CatalogoPatron()
    ui.setupUi(CatalogoPatron)
    CatalogoPatron.show()
    sys.exit(app.exec_())
